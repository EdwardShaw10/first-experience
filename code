兼容不同浏览器

window.onload = f1; 						// 注册load事件类型
if(document.addEventListener){ 			// 兼容DOM标准
    document.addEventListener("DOMContentLoaded", f, false); 
	// 注册DOMContentLoaded事件类型
}
function f(){
    alert("我提前执行了");
}
function f1(){
    alert("页面初始化完毕");
}

if(window.ActiveXObject){ 						// 兼容IE浏览器
    document.write("<script id=ie_onload defer src=javascript:void(0)><\/script>");							// 写入脚本标签
    document.getElementById("ie_onload").onreadystatechange=function(){
    // 判断脚本标签的状态
        if(this.readyState == "complete"){
		// 如果状态为完成，则说明文档结构加载已完毕
            this.onreadystatechange = null; 		// 清空当前方法
            f();	// 调用预先执行的回调函数
        }
    }
}
 

if (/WebKit/i.test(navigator.userAgent)){ 		// 兼容Safari浏览器
    var _timer = setInterval(function(){		// 定义时间监测器
        if (/loaded|complete/.test(document.readyState)) {
		// 如果当前状态显示完成
            clearInterval(_timer); 				// 清除时间监测器
            f();									// 调用预先执行的回调函数
        }
    }, 10);
}


调整内容随窗口比例变化
var box = document.getElementById("box");		// �ｷ����絖���綣�������
box.style.position = "absolute";				// 膸�絲劫�篏�
box.style.backgroundColor = "red";		// ������
box.style.width = w() * 0.8 + "px";	// 莅丞舟��絖�絎遵墾筝榊����綺���0.8��
box.style.height = h() * 0.8 + "px";	// 莅丞舟��絖�蕭�綺�減腦����綺���0.8��
window.onresize = function(){	// 羈���resize篋�篁九����醇�逸�����莪��雁��絖�紊у��
    box.style.width = w() * 0.8 + "px";
    box.style.height = h() * 0.8 + "px";
}
function w(){					// �ｷ��腦����綺�
    if (window.innerWidth) 		// �弱�DOM
        return window.innerWidth;
    else if ((document.body) && (document.body.clientWidth)) 
	// �弱�IE
        return document.body.clientWidth;
}
function h(){					// �ｷ��腦����綺�
    if (window.innerHeight) 	// �弱�DOM
        return window.innerHeight;
    else if ((document.body) && (document.body.clientHeight)) 
	// �弱�IE
        return document.body.clientHeight;
}


错误捕获

window.onerror = function(message){ 		// 捕获浏览器错误行为
   alert("错误原因：" + arguments[0]+ 
       "\n错误URL: " +  arguments[1] + 
       "\n错误行号: " + arguments[2]
    );
   return true; 							// 禁止浏览器显示标准出错信息
}
a.innerHTML = "";							// 制造错误机会



选择文本复制
var a = document.getElementsByTagName("input")[0]; 
	// 获取第一个文本框的引用指针
var b = document.getElementsByTagName("input")[1]; 
	// 获取第二个文本框的引用指针
a.onselect = function(){		// 为第一个文本框绑定select事件处理函数
    if (document.selection){ 	// 兼容IE
        o = document.selection.createRange();	// 创建一个选择区域
        if(o.text.length > 0) 	// 如果选择区域内存在文本
        b.value = o.text; 		// 则把该区域内的文本赋值给第二个文本框
    }else{						// 兼容DOM
        p1 = a.selectionStart; 	// 获取文本框中选择的初始位置
        p2 = a.selectionEnd; 	// 获取文本框中选择的结束位置
        b.value = a.value.substring(p1, p2); 
		// 截取文本框中被选取的文本字符串，然后赋值给第二个文本框
    }


禁止表单提交
var t = document.getElementsByTagName("input")[0]; 	// 获取文本框的引用指针
var f = document.getElementsByTagName("form")[0]; 	// 获取表单的引用指针
f.onsubmit = function(e){
	if(t.value.length < 1){
		var  event = e || window.event;
        if (event.preventDefault){
            event.preventDefault();
        } else {
            event.returnValue = false;
        }
	}
}
兼容浏览器，焦点自动
if (element.autofocus !== true){
	element.focus(); 
}

避免重复提交，给按钮设置不可用
<form id="myform"  method="post" action="javascript:alert('表单提交啦!')">
    <h3>反馈表</h3>
    <fieldset>
        <p>姓名: <input class="special" type="text" name="name"></p>
        <p>性别:
            <input type="radio"  name="sex" value="0">男
            <input type="radio"  name="sex" value="1">女 </p>
        <p>邮箱: <input type="text" name="email"></p>
        <p>网址：<input type="text" name="web"></p>
        <p>反馈意见: <textarea name="message" cols="30" rows="10"></textarea> </p>
        <p class="submit">
            <button type="submit" name="submit">提交表单</button>
        </p>
    </fieldset>
</form>

